service: serverless-basics

frameworkVersion: '3'

configValidationMode: error

provider:
  name: aws
  runtime: nodejs18.x
  region: sa-east-1
  environment:
      userTableName: ${self:custom.userTableName}
  iamRoleStatements:
      - Effect: Allow
        Action:
            - dynamodb:*
        Resource: '*'


plugins:
  - serverless-offline
  - serverless-s3-sync

custom:
  s3Sync:
    - bucketName: serverless-bucket-ssemhan
      localDir: src/main/_mock/upload-data
  userTableName: users

functions:
  getMockUser:
    handler: src/main/lambdas/HTTP/handlers/mock-users/getUser.handler
    events:
        - http:
            path: /get-mock-user/{id}
            method: GET
            cors: true
            request:
              parameters:
                paths:
                  id: true
  getUser:
    handler: src/main/lambdas/HTTP/handlers/users/getUser.handler
    events:
        - http:
            path: /get-user/{id}
            method: GET
            cors: true
            request:
              parameters:
                paths:
                  id: true
                  
resources:
  Resources:
    DemoBucketUpload:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: serverless-bucket-ssemhan
    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.userTableName}
        AttributeDefinitions:
            - AttributeName: id
              AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # PROVISIONED | PAY_PER_REQUEST
